{
  "name": "serina",
  "author": "Florian Armand Alias Foxdog05000",
  "license": "MIT",
  "version": "0.2.2",
  "main": "api/api.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/foxdog05000/serina.git"
  },
  "keywords": [
    "electron",
    "translation",
    "gui",
    "graphical",
    "i18next"
  ],
  "bugs": {
    "url": "https://github.com/foxdog05000/serina/issues"
  },
  "homepage": "https://github.com/foxdog05000/serina#readme",
  "dependencies": {
    "body-parser": "^1.17.1",
    "express": "^4.15.2",
    "jsonfile": "^2.4.0"
  },
  "devDependencies": {
    "autoprefixer": "^7.1.5",
    "babel-cli": "^6.24.1",
    "babel-preset-es2015": "^6.24.1",
    "electron": "^1.8.2-beta.4",
    "electron-packager": "^8.5.1",
    "grunt": "^1.0.0",
    "grunt-angular-templates": "^1.1.0",
    "grunt-concurrent": "^2.3.1",
    "grunt-contrib-clean": "^1.1.0",
    "grunt-contrib-compass": "^1.0.0",
    "grunt-contrib-concat": "^1.0.1",
    "grunt-contrib-connect": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-cssmin": "^2.2.1",
    "grunt-contrib-htmlmin": "^2.4.0",
    "grunt-contrib-imagemin": "^2.0.1",
    "grunt-contrib-jshint": "^1.1.0",
    "grunt-contrib-uglify": "^3.1.0",
    "grunt-contrib-watch": "^1.0.0",
    "grunt-electron": "^6.0.0",
    "grunt-filerev": "^2.3.1",
    "grunt-google-cdn": "^0.4.3",
    "grunt-jscs": "^3.0.1",
    "grunt-karma": "^2.0.0",
    "grunt-newer": "^1.3.0",
    "grunt-ng-annotate": "^3.0.0",
    "grunt-postcss": "^0.9.0",
    "grunt-svgmin": "^4.0.0",
    "grunt-usemin": "^3.1.1",
    "grunt-wiredep": "^3.0.1",
    "jasmine-core": "^2.6.4",
    "jit-grunt": "^0.10.0",
    "jshint-stylish": "^2.2.1",
    "karma": "^1.7.0",
    "karma-jasmine": "^1.1.0",
    "karma-phantomjs-launcher": "^1.0.4",
    "rimraf": "^2.6.1",
    "time-grunt": "^1.4.0"
  },
  "scripts": {
    "build": "rimraf api/dist/ && babel ./api/ --out-dir api/dist/ --ignore ./node_modules,./.babelrc,./package.json,./npm-debug.log --copy-files",
    "start": "npm run build && node api/dist/api.js",
    "package": "npm run build && grunt package:linux",
    "postinstall": "bower install"
  }
}
